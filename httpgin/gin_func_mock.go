// Code generated by mockery v2.36.0. DO NOT EDIT.

package httpgin

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// mockGinFunc is an autogenerated mock type for the ginFunc type
type mockGinFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *mockGinFunc) Execute(_a0 *Config) gin.HandlerFunc {
	ret := _m.Called(_a0)

	var r0 gin.HandlerFunc
	if rf, ok := ret.Get(0).(func(*Config) gin.HandlerFunc); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gin.HandlerFunc)
		}
	}

	return r0
}

// newMockGinFunc creates a new instance of mockGinFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockGinFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockGinFunc {
	mock := &mockGinFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
